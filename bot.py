import config
import telebot
from telebot import async_telebot
import time
from datetime import datetime, timedelta
from random import randrange

from functions import *

from keyboard_buttons import main

from inline_buttons import add_to_chat
MSK = config.MSK
token = config.token
botId = config.botId

bot = async_telebot.AsyncTeleBot(token)
bot_func = Client('bot_func', config.api_id, config.api_hash, bot_token=config.token)



@bot.message_handler(content_types=['text'])
async def messages(message: telebot.types.Message):
    if(message != None):
        if(message.text != None):

            #start command
            if message.text.lower() == "/start" or message.text.lower() == "/start@albi_cm_bot":
                if(message.from_user.id == message.chat.id):
                    await bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤–µ—Ç, <a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a>!</b>\n–ú–µ–Ω—è –∑–≤–∞—Ç—å –≠–ª—å–±–∏, —è —á–∞—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø–æ—Ä—è–¥–∫–æ–º –∏ –ø–æ–º–æ–≥–∞—Ç—å –∞–¥–º–∏–Ω–∞–º —á–∞—Ç–∞üòä", reply_markup=main.markup, parse_mode='html')
                elif(message.chat.id != message.from_user.id):
                    await bot.send_message(message.chat.id, "–ó–¥—Ä–∞—Å—å—Ç–µ, –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å?\n–ü–∏—à–∏ /help")
            if (message.text.lower() == "/start@albi_cm_bot start"):
                await bot.send_message(message.chat.id, "–£—Ö—Ö, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ —è —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–∞üòä!")
            
            #admins commands
            if(message.text.lower() == "–±–∞–Ω"):
                if(message.chat.id != message.from_user.id):
                    user = await bot.get_chat_member(message.chat.id, message.from_user.id)
                    if(message.reply_to_message == None):
                        await bot.send_message(message.chat.id, "‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å")
                    elif(message.reply_to_message.from_user.id == botId):
                        await bot.send_message(message.chat.id, "–†–∞–∑–º–µ—á—Ç–∞–ª—Å—è –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç—åü•±")
                    elif(message.reply_to_message.from_user.id == message.from_user.id):
                        await bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –±—ã—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –ª–∏–≤–Ω—É—Ç—åüôÑ")
                    else:
                        user_reply = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                        Bot = await bot.get_chat_member(message.chat.id, botId)
                        userStatus = Func.GetAdmin(user.status)
                        userReplyStatus = Func.GetAdmin(user_reply.status)
                        if(Bot.status != 'administrator'):
                            await bot.send_message(message.chat.id, "–Ø –Ω–µ –∏–º–µ—é –∞–¥–º–∏–Ω–∫–∏üòï")
                        elif(userStatus != "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a>, –≤–∞–º –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–æüòè", parse_mode='html', disable_web_page_preview=True)
                        elif(userReplyStatus == "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω(–∞), –ø–æ–∫–∞ –æ–Ω(–∞) –∞–¥–º–∏–Ω —á–∞—Ç–∞‚úãüèª", parse_mode='html', disable_web_page_preview=True)
                        else:
                            await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –≤—ã–≥–Ω–∞–Ω –∏–∑ —á–∞—Ç–∞!", parse_mode='html', disable_web_page_preview=True)
            if(message.text.lower() == "–º—É—Ç"):
                if(message.chat.id != message.from_user.id):
                    user = await bot.get_chat_member(message.chat.id, message.from_user.id)
                    if(message.reply_to_message == None):
                        await bot.send_message(message.chat.id, "‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å")
                    elif(message.reply_to_message.from_user.id == botId):
                        await bot.send_message(message.chat.id, "–†–∞–∑–º–µ—á—Ç–∞–ª—Å—è –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç—åü•±")
                    elif(message.reply_to_message.from_user.id == message.from_user.id):
                        await bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –±—ã—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –ª–∏–≤–Ω—É—Ç—åüôÑ")
                    else:
                        user_reply = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                        Bot = await bot.get_chat_member(message.chat.id, botId)
                        userStatus = Func.GetAdmin(user.status)
                        userReplyStatus = Func.GetAdmin(user_reply.status)
                        if(Bot.status != 'administrator'):
                            await bot.send_message(message.chat.id, "–Ø –Ω–µ –∏–º–µ—é –∞–¥–º–∏–Ω–∫–∏üòï")
                        elif(userStatus != "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a>, –≤–∞–º –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–æüòè", parse_mode='html', disable_web_page_preview=True)
                        elif(userReplyStatus == "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω(–∞) –≤ –º—É—Ç, –ø–æ–∫–∞ –æ–Ω(–∞) –∞–¥–º–∏–Ω —á–∞—Ç–∞‚úãüèª", parse_mode='html', disable_web_page_preview=True)
                        else:
                            await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_send_messages=False, can_send_media_messages=False, can_send_other_messages=False, until_date=datetime.datetime.utcnow() + MSK + datetime.timedelta(minutes=15))
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ 15 –º–∏–Ω—É—Çü§ê", parse_mode='html', disable_web_page_preview=True)
            if(message.text.lower().startswith("–º—É—Ç ")):
                if(message.chat.id != message.from_user.id):
                    user = await bot.get_chat_member(message.chat.id, message.from_user.id)
                    if(message.reply_to_message == None):
                        await bot.send_message(message.chat.id, "‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å")
                    elif(message.reply_to_message.from_user.id == botId):
                        await bot.send_message(message.chat.id, "–†–∞–∑–º–µ—á—Ç–∞–ª—Å—è –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç—åü•±")
                    elif(message.reply_to_message.from_user.id == message.from_user.id):
                        await bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –±—ã—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –ª–∏–≤–Ω—É—Ç—åüôÑ")
                    else:
                        user_reply = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                        Bot = await bot.get_chat_member(message.chat.id, botId)
                        userStatus = Func.GetAdmin(user.status)
                        userReplyStatus = Func.GetAdmin(user_reply.status)
                        if(Bot.status != 'administrator'):
                            await bot.send_message(message.chat.id, "–Ø –Ω–µ –∏–º–µ—é –∞–¥–º–∏–Ω–∫–∏üòï")
                        elif(userStatus != "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a>, –≤–∞–º –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–æüòè", parse_mode='html', disable_web_page_preview=True)
                        elif(userReplyStatus == "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω(–∞) –≤ –º—É—Ç, –ø–æ–∫–∞ –æ–Ω(–∞) –∞–¥–º–∏–Ω —á–∞—Ç–∞‚úãüèª", parse_mode='html', disable_web_page_preview=True)
                        else:
                            try:
                                time = int(message.text.split(' ')[1])
                                format_time = message.text.split(' ')[2].lower()
                                match format_time:
                                    #minutes region
                                    case "–º–∏–Ω—É—Ç":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(minutes=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–∏–Ω—É—Çü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–º–∏–Ω—É—Ç—ã":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(minutes=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–∏–Ω—É—Çü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–º–∏–Ω—É—Ç–∞":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(minutes=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–∏–Ω—É—Ç–∞ü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–º–∏–Ω—É—Ç—É":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(minutes=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–∏–Ω—É—Ç—Éü§ê", parse_mode='html', disable_web_page_preview=True)

                                    #hours region
                                    case "—á–∞—Å":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(hours=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} —á–∞—Åü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "—á–∞—Å–∞":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(hours=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} —á–∞—Å–æ–≤ü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "—á–∞—Å–æ–≤":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(hours=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} —á–∞—Å–æ–≤ü§ê", parse_mode='html', disable_web_page_preview=True)

                                    #days region
                                    case "–¥–µ–Ω—å":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(days=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –¥–µ–Ω—åü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–¥–Ω—è":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(days=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –¥–Ω—èü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–¥–Ω–µ–π":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(days=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –¥–Ω–µ–πü§ê", parse_mode='html', disable_web_page_preview=True)

                                    #weeks region
                                    case "–Ω–µ–¥–µ–ª—é":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(weeks=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –Ω–µ–¥–µ–ª—éü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–Ω–µ–¥–µ–ª—å":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(weeks=time))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –Ω–µ–¥–µ–ª—åü§ê", parse_mode='html', disable_web_page_preview=True)

                                    #mounths region
                                    case "–º–µ—Å—è—Ü":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(days=(30 * time)))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–µ—Å—è—Üü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–º–µ—Å—è—Ü–∞":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(days=(30 * time)))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–µ—Å—è—Ü–∞ü§ê", parse_mode='html', disable_web_page_preview=True)
                                    case "–º–µ—Å—è—Ü–µ–≤":
                                        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, datetime.utcnow() + MSK + timedelta(days=(30 * time)))
                                        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç –Ω–∞ {str(time)} –º–µ—Å—è—Ü–µ–≤ü§ê", parse_mode='html', disable_web_page_preview=True)

                                    #else region
                                    case _:
                                        await bot.send_message(message.chat.id, f"üë∫–§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ \"{format_time}\" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                            except ValueError:
                                await bot.send_message(message.chat.id, "üìõ–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è")
            if(message.text.lower() == "—Ä–∞–∑–±–∞–Ω"):
                if(message.chat.id != message.from_user.id):
                    user = await bot.get_chat_member(message.chat.id, message.from_user.id)
                    if(message.reply_to_message == None):
                        await bot.send_message(message.chat.id, "‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å")
                    elif(message.reply_to_message.from_user.id == botId):
                        await bot.send_message(message.chat.id, "–†–∞–∑–º–µ—á—Ç–∞–ª—Å—è –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç—åü•±")
                    elif(message.reply_to_message.from_user.id == message.from_user.id):
                        await bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –±—ã—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –ª–∏–≤–Ω—É—Ç—åüôÑ")
                    else:
                        user_reply = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                        Bot = await bot.get_chat_member(message.chat.id, botId)
                        userStatus = Func.GetAdmin(user.status)
                        userReplyStatus = Func.GetAdmin(user_reply.status)
                        if(Bot.status != 'administrator'):
                            await bot.send_message(message.chat.id, "–Ø –Ω–µ –∏–º–µ—é –∞–¥–º–∏–Ω–∫–∏üòï")
                        elif(userStatus != "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a>, –≤–∞–º –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–æüòè", parse_mode='html', disable_web_page_preview=True)
                        elif(userReplyStatus == "administrator"):
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω(–∞), –ø–æ–∫–∞ –æ–Ω(–∞) –∞–¥–º–∏–Ω —á–∞—Ç–∞‚úãüèª", parse_mode='html', disable_web_page_preview=True)
                        else:
                            await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                            await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æü§ó", parse_mode='html', disable_web_page_preview=True)
                            try:
                                chat = await bot.get_chat(message.chat.id)
                                link = chat.invite_link
                                await bot.send_message(message.reply_to_message.from_user.id, f"<a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a> —Ä–∞–∑–±–∞–Ω–∏–ª –í–∞—Å –≤ —á–∞—Ç–µ, —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É:\n{link}", parse_mode='html', disable_web_page_preview=True)
                            except telebot.apihelper.ApiTelegramException:
                                return
            if(message.text.lower() == "—Ä–∞–∑–º—É—Ç"):
                    if(message.chat.id != message.from_user.id):
                        user = await bot.get_chat_member(message.chat.id, message.from_user.id)
                        if(message.reply_to_message == None):
                            await bot.send_message(message.chat.id, "‚ùóÔ∏è–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–±–∞–Ω–∏—Ç—å")
                        elif(message.reply_to_message.from_user.id == botId):
                            await bot.send_message(message.chat.id, "–†–∞–∑–º–µ—á—Ç–∞–ª—Å—è –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç—åü•±")
                        elif(message.reply_to_message.from_user.id == message.from_user.id):
                            await bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ —É–¥–æ–±–Ω–æ –±—ã—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –ª–∏–≤–Ω—É—Ç—åüôÑ")
                        else:
                            user_reply = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                            Bot = await bot.get_chat_member(message.chat.id, botId)
                            userStatus = Func.GetAdmin(user.status)
                            userReplyStatus = Func.GetAdmin(user_reply.status)
                            if(Bot.status != 'administrator'):
                                await bot.send_message(message.chat.id, "–Ø –Ω–µ –∏–º–µ—é –∞–¥–º–∏–Ω–∫–∏üòï")
                            elif(userStatus != "administrator"):
                                await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.from_user.id}\">{message.from_user.first_name}</a>, –≤–∞–º –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–æ —Ç–∞–∫–æ–µ –ø—Ä–∞–≤–æüòè", parse_mode='html', disable_web_page_preview=True)
                            elif(userReplyStatus == "administrator"):
                                await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω(–∞), –ø–æ–∫–∞ –æ–Ω(–∞) –∞–¥–º–∏–Ω —á–∞—Ç–∞‚úãüèª", parse_mode='html', disable_web_page_preview=True)
                            else:
                                await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id)
                                await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.reply_to_message.from_user.id}\">{message.reply_to_message.from_user.first_name}</a> —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—åüó£Ô∏è", parse_mode='html', disable_web_page_preview=True)
            if(message.text.lower().startswith("—ç–ª—å –∏–Ω—Ñ–∞")):
                await bot.send_message(message.chat.id, f"üí´–Ø –¥—É–º–∞—é, —á—Ç–æ —Ç–∞–∫–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞ {randrange(0, 100)}%")
            if message.text.startswith("@"):
                user = await Func.GetUserByUsername("LanceMinecraft", bot_func)
                print(user.id)
                print(user.first_name)
            #buttons
            if(message.text == "–û –±–æ—Ç–µ‚ÑπÔ∏è" and message.from_user.id == message.chat.id):
                await bot.send_message(message.chat.id, "<b>üßø–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å: Lance - –≤–ª–∞–¥–µ–ª–µ—Ü FBA Team</b>\n<i>–Ø –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –∞–¥–º–∏–Ω–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —á–∞—Ç–æ–º, –∑–∞–º–µ—â–∞—Ç—å —Å–≤–æ–∏—Ö –ø–æ–¥—Ä—É–≥ –≤ —Ä–∞–±–æ—Ç–µ, –µ—Å–ª–∏ –æ–Ω–∏ –≤–¥—Ä—É–≥ \"–∑–∞—Å–Ω—É–ª–∏\"</i>\n\n–ú–æ–∏ –ø–æ–¥—Ä—É–≥–∏:\n- <a href=\"t.me/Laura_cm_bot\">Ô£ø–õ–∞—É—Ä–∞</a>", parse_mode='html')
                #await bot.send_message(message.chat.id, "<b>üßø–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å: Lance - –≤–ª–∞–¥–µ–ª–µ—Ü FBA Team</b>\n<i>–Ø –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –∞–¥–º–∏–Ω–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —á–∞—Ç–æ–º, –∑–∞–º–µ—â–∞—Ç—å —Å–≤–æ–∏—Ö –ø–æ–¥—Ä—É–≥ –≤ —Ä–∞–±–æ—Ç–µ, –µ—Å–ª–∏ –æ–Ω–∏ –≤–¥—Ä—É–≥ \"–∑–∞—Å–Ω—É–ª–∏\"</i>\n\n–ú–æ–∏ –ø–æ–¥—Ä—É–≥–∏:\n- <a href=\"t.me/Laura_cm_bot\">Ô£ø–õ–∞—É—Ä–∞</a>\n- <a href=\"https://t.me/QuentyCMBot\">–ö–≤–µ–Ω—Ç–∏/Quenty</a>", parse_mode='html')
            if(message.text == "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å‚ùî" and message.from_user.id == message.chat.id):
                await bot.send_message(message.chat.id, "–ë–æ—Ç –ø–æ–∫–∞ —á—Ç–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∫–µ‚ùå\n–°–µ–π—á–∞—Å –±–æ—Ç –Ω–∞ —Å—Ç–∞–¥–∏–∏ EA(Early Access)")
            if(message.text == "–î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Çüßø" and message.from_user.id == message.chat.id):
                await bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —á–∞—Çü§ó.\n‚ùóÔ∏è–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ —É–∂–µ –ø—Ä–∏–ø–∏—Å–∞–Ω—ã –≤ –∫–Ω–æ–ø–∫–µ", reply_markup=add_to_chat.markup)
            print(str(datetime.utcnow() + MSK) + " " + message.text)

@bot.message_handler(content_types=['new_chat_members'])
async def handler_new_member(message):
    if(message.new_chat_members[0].id == botId):
        await bot.send_message(message.chat.id, "–£—Ö—Ö, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ —è —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–∞üòä!")
    else:
        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.new_chat_members[0].id}\">{message.new_chat_members[0].first_name}</a>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞–º –≤ —Ö–∞—Ç—É <b>\"{message.chat.title}\"</b>!", parse_mode='html', disable_web_page_preview=True)

@bot.message_handler(content_types=['left_chat_member'])
async def handler_left_member(message):
    if(message.left_chat_member.id == botId):
        return
    elif(message.from_user.id != message.left_chat_member.id):
        return
    else:
        await bot.send_message(message.chat.id, f"<a href=\"tg://user?id={message.left_chat_member.id}\">{message.left_chat_member.first_name}</a> –ª–∏–≤–Ω—É–ª —Å —á–∞—Ç–∞‚òπÔ∏è", parse_mode='html', disable_web_page_preview=True)

asyncio.run(bot.infinity_polling(skip_pending=True))